name: Android E2E Tests

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

jobs:
  android-e2e-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    env:
      ANDROID_EMULATOR_API_LEVEL: 28
      ANDROID_EMULATOR_TARGET: default
      ANDROID_EMULATOR_ARCH: x86_64
      ANDROID_EMULATOR_DISK_SPACE: 1024M
      ANDROID_EMULATOR_RAM_SIZE: 256M
      ANDROID_EMULATOR_HEAP_SIZE: 256M
      ANDROID_EMULATOR_BOOT_TIMEOUT: 2700
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
          clean: true
        
      - name: Setup KVM (Required for Android Emulator)
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
        shell: bash

      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ env.ANDROID_EMULATOR_API_LEVEL }}-${{ env.ANDROID_EMULATOR_TARGET }}-${{ env.ANDROID_EMULATOR_ARCH }}-${{ runner.os }}

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ env.ANDROID_EMULATOR_API_LEVEL }}
          target: ${{ env.ANDROID_EMULATOR_TARGET }}
          arch: ${{ env.ANDROID_EMULATOR_ARCH }}
          disk-size: ${{ env.ANDROID_EMULATOR_DISK_SPACE }}
          force-avd-creation: false
          disable-animations: true
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          script: echo "Generated AVD snapshot for caching."

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: yarn install

      - name: Install Metro dependencies
        working-directory: external/metro
        run: yarn set version 1.22.22 && yarn install

      - name: Install Maestro CLI
        run: |
          curl -Ls "https://get.maestro.mobile.dev" | bash
          echo "${HOME}/.maestro/bin" >> $GITHUB_PATH
        shell: bash

      - name: Start Dev Server
        run: |
          nohup yarn workspaces foreach --all -p --include='example-*' run start &
          echo $! > server.pid
        shell: bash

      - name: Run Android E2E Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ env.ANDROID_EMULATOR_API_LEVEL }}
          target: ${{ env.ANDROID_EMULATOR_TARGET }}
          arch: ${{ env.ANDROID_EMULATOR_ARCH }}
          disk-size: ${{ env.ANDROID_EMULATOR_DISK_SPACE }}
          emulator-boot-timeout: ${{ env.ANDROID_EMULATOR_BOOT_TIMEOUT }}
          force-avd-creation: false
          disable-animations: true
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          script: |
            yarn workspace example-host android
            adb reverse tcp:8082 tcp:8082
            yarn workspace example-host e2e

      - name: Upload Maestro Logs on Failure
        if: failure() # Runs only if any of the previous steps fail
        uses: actions/upload-artifact@v4
        with:
          name: maestro-logs-android
          path: ~/.maestro/tests/

      - name: Stop background process
        if: always()
        run: |
          kill $(cat server.pid) || true
