diff --git a/dist/commands/bundle/buildBundle.js b/dist/commands/bundle/buildBundle.js
index 0f9977969bd44f9f418dd1ad7d054250097c547e..9ef78a997bfef177a623102531959d5a2d210e74 100644
--- a/dist/commands/bundle/buildBundle.js
+++ b/dist/commands/bundle/buildBundle.js
@@ -53,7 +53,16 @@ async function buildBundleWithConfig(
     );
     throw new Error("Bundling failed");
   }
-  process.env.NODE_ENV = args.dev ? "development" : "production";
+  if (process.env.METRO_FEDERATION_DEV) {
+    // Don't set global NODE_ENV to production inside the monorepo
+    // because it breaks Metro's babel-register ad hoc transforms
+    // when building with args.dev === false
+    process.env.NODE_ENV = "development";
+  } else {
+    // This is used by a bazillion of npm modules we don't control so we don't
+    // have other choice than defining it as an env variable here.
+    process.env.NODE_ENV = args.dev ? "development" : "production";
+  }
   let sourceMapUrl = args.sourcemapOutput;
   if (sourceMapUrl != null && !args.sourcemapUseAbsolutePath) {
     sourceMapUrl = _path.default.basename(sourceMapUrl);
diff --git a/dist/utils/loadMetroConfig.js b/dist/utils/loadMetroConfig.js
index c0749e111d342611631c3eedc9c757936e8ff225..1405ad2b05d99120225563827aaddf07cdc35018 100644
--- a/dist/utils/loadMetroConfig.js
+++ b/dist/utils/loadMetroConfig.js
@@ -33,6 +33,7 @@ function getOverrideConfig(ctx, config) {
     resolver,
     serializer: {
       getModulesRunBeforeMainModule: () => [
+        ...(config.serializer?.getModulesRunBeforeMainModule?.() || []),
         require.resolve(
           _path.default.join(
             ctx.reactNativePath,
